/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FormTemplate;

import static FormTemplate.DetailPanel1.tblTraceSummary;
import static FormTemplate.DetailPanel2.tblDetailSummary;
import Helper.Common.MessageHelper;
import Helper.Common.TimeHelper;
import Helper.Common.Variables;
import static Helper.Common.Variables.globalXESLogListStrings;
import static Helper.Common.Variables.predictedESNLogList;
import Helper.Dashboard.CenterPanelHelper;
import static Helper.Dashboard.CenterPanelHelper.PredictESN;
import static Helper.Dashboard.CenterPanelHelper.ResetNewTraceTable;
import static Helper.Dashboard.DetailPanel1Helper.TraceStatistic;
import Helper.Dashboard.DetailPanel3_newHelper;
import Helper.Dashboard.RsAllocationHelper;
import Main.Dashboard;
import Main.RunProgram;
import TableHelper.TableController;
import static TableHelper.TableController.InsertValueToLastCellInColumn;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.io.FileUtils;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.StyleSheetDocumentImpl;

/**
 *extends JFrame implements ActionListener, MouseWheelListener, MouseMotionListener, KeyListener
 * @author phamdinhlam
 */
public class CenterPanel extends javax.swing.JPanel implements ActionListener, MouseWheelListener, MouseMotionListener, KeyListener {

    /**
     * Creates new form CenterPanel
     */
    public CenterPanel() {
        initComponents();
        ResetNewTraceTable();
        CenterPanelHelper.AddListenerToInputTraceListTable(tblInputTraceList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CenterPanel = new javax.swing.JTabbedPane();
        panelStatistics = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblViewActPerStatistic = new javax.swing.JLabel();
        lblViewTraceStatistics = new javax.swing.JLabel();
        lblViewTraceDetail = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        panelImageLeft = new Helper.Common.PanelImage();
        jPanel8 = new javax.swing.JPanel();
        panelImageRight = new Helper.Common.PanelImage();
        panelLogVisualization = new javax.swing.JPanel();
        panelLogAnalysis = new javax.swing.JPanel();
        panelGraphvizResult = new Helper.Common.PanelImage();
        RsAllocation_Prepare = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblShowInTable1 = new javax.swing.JLabel();
        lblResetNewTrace = new javax.swing.JLabel();
        lblRemoveEvent = new javax.swing.JLabel();
        lblPredictESN = new javax.swing.JLabel();
        lblIInsertTraceFromtblTraceTotblTraceList = new javax.swing.JLabel();
        lblRemoveSelectedTrace = new javax.swing.JLabel();
        lblInsertActToEvent = new javax.swing.JLabel();
        lblNewTrace5 = new javax.swing.JLabel();
        lblAutoInsertTraces = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblActSet = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPerSet = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblNewTrace = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblInputTraceList = new javax.swing.JTable();
        RsAllocation_Analysis = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        rsAllocation_tblTraceInfo = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();

        CenterPanel.setAlignmentX(0.0F);
        CenterPanel.setAlignmentY(0.0F);
        CenterPanel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CenterPanelStateChanged(evt);
            }
        });

        lblViewActPerStatistic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-doughnut_chart.png"))); // NOI18N
        lblViewActPerStatistic.setText("Act/Per in traces");
        lblViewActPerStatistic.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblViewActPerStatistic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblViewActPerStatisticMousePressed(evt);
            }
        });

        lblViewTraceStatistics.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-combo_chart.png"))); // NOI18N
        lblViewTraceStatistics.setText("Trace summary");
        lblViewTraceStatistics.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblViewTraceStatistics.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblViewTraceStatisticsMousePressed(evt);
            }
        });

        lblViewTraceDetail.setText("Trace detail");
        lblViewTraceDetail.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblViewTraceDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblViewTraceDetailMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblViewTraceDetail)
                    .addComponent(lblViewActPerStatistic)
                    .addComponent(lblViewTraceStatistics))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblViewTraceStatistics)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblViewTraceDetail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblViewActPerStatistic)
                .addContainerGap(481, Short.MAX_VALUE))
        );

        panelImageLeft.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelImageLeftLayout = new javax.swing.GroupLayout(panelImageLeft);
        panelImageLeft.setLayout(panelImageLeftLayout);
        panelImageLeftLayout.setHorizontalGroup(
            panelImageLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 554, Short.MAX_VALUE)
        );
        panelImageLeftLayout.setVerticalGroup(
            panelImageLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(panelImageLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(panelImageLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelImageRight.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelImageRightLayout = new javax.swing.GroupLayout(panelImageRight);
        panelImageRight.setLayout(panelImageRightLayout);
        panelImageRightLayout.setHorizontalGroup(
            panelImageRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 623, Short.MAX_VALUE)
        );
        panelImageRightLayout.setVerticalGroup(
            panelImageRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelImageRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelImageRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelStatisticsLayout = new javax.swing.GroupLayout(panelStatistics);
        panelStatistics.setLayout(panelStatisticsLayout);
        panelStatisticsLayout.setHorizontalGroup(
            panelStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatisticsLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelStatisticsLayout.setVerticalGroup(
            panelStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelStatisticsLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        CenterPanel.addTab("Log statistics", panelStatistics);

        javax.swing.GroupLayout panelLogVisualizationLayout = new javax.swing.GroupLayout(panelLogVisualization);
        panelLogVisualization.setLayout(panelLogVisualizationLayout);
        panelLogVisualizationLayout.setHorizontalGroup(
            panelLogVisualizationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1362, Short.MAX_VALUE)
        );
        panelLogVisualizationLayout.setVerticalGroup(
            panelLogVisualizationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 577, Short.MAX_VALUE)
        );

        CenterPanel.addTab("Log visualization", panelLogVisualization);

        panelGraphvizResult.setBackground(new java.awt.Color(255, 255, 255));
        panelGraphvizResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelGraphvizResultMousePressed(evt);
            }
        });

        javax.swing.GroupLayout panelGraphvizResultLayout = new javax.swing.GroupLayout(panelGraphvizResult);
        panelGraphvizResult.setLayout(panelGraphvizResultLayout);
        panelGraphvizResultLayout.setHorizontalGroup(
            panelGraphvizResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1498, Short.MAX_VALUE)
        );
        panelGraphvizResultLayout.setVerticalGroup(
            panelGraphvizResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 571, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelLogAnalysisLayout = new javax.swing.GroupLayout(panelLogAnalysis);
        panelLogAnalysis.setLayout(panelLogAnalysisLayout);
        panelLogAnalysisLayout.setHorizontalGroup(
            panelLogAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGraphvizResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelLogAnalysisLayout.setVerticalGroup(
            panelLogAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLogAnalysisLayout.createSequentialGroup()
                .addComponent(panelGraphvizResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        CenterPanel.addTab("Log analysis", panelLogAnalysis);

        lblShowInTable1.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        lblShowInTable1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-download.png"))); // NOI18N
        lblShowInTable1.setText("Load");
        lblShowInTable1.setToolTipText("Show selected trace in table");
        lblShowInTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblShowInTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblShowInTable1MousePressed(evt);
            }
        });

        lblResetNewTrace.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        lblResetNewTrace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-available_updates.png"))); // NOI18N
        lblResetNewTrace.setText("Reset");
        lblResetNewTrace.setToolTipText("Show selected trace in table");
        lblResetNewTrace.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblResetNewTrace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblResetNewTraceMousePressed(evt);
            }
        });

        lblRemoveEvent.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        lblRemoveEvent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-minus2.png"))); // NOI18N
        lblRemoveEvent.setText("Remove event");
        lblRemoveEvent.setToolTipText("Show selected trace in table");
        lblRemoveEvent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblRemoveEvent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblRemoveEventMousePressed(evt);
            }
        });

        lblPredictESN.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        lblPredictESN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-brain_3.png"))); // NOI18N
        lblPredictESN.setText("Predict ESN");
        lblPredictESN.setToolTipText("Insert all input trace to system for geting prediction");
        lblPredictESN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblPredictESN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblPredictESNMousePressed(evt);
            }
        });

        lblIInsertTraceFromtblTraceTotblTraceList.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        lblIInsertTraceFromtblTraceTotblTraceList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-plus 2.png"))); // NOI18N
        lblIInsertTraceFromtblTraceTotblTraceList.setText("Insert trace");
        lblIInsertTraceFromtblTraceTotblTraceList.setToolTipText("Show selected trace in table");
        lblIInsertTraceFromtblTraceTotblTraceList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblIInsertTraceFromtblTraceTotblTraceList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblIInsertTraceFromtblTraceTotblTraceListMousePressed(evt);
            }
        });

        lblRemoveSelectedTrace.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        lblRemoveSelectedTrace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-minus2.png"))); // NOI18N
        lblRemoveSelectedTrace.setText("Remove trace");
        lblRemoveSelectedTrace.setToolTipText("Show selected trace in table");
        lblRemoveSelectedTrace.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblRemoveSelectedTrace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblRemoveSelectedTraceMousePressed(evt);
            }
        });

        lblInsertActToEvent.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        lblInsertActToEvent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-plus.png"))); // NOI18N
        lblInsertActToEvent.setText("Insert activity");
        lblInsertActToEvent.setToolTipText("Show selected trace in table");
        lblInsertActToEvent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblInsertActToEvent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblInsertActToEventMousePressed(evt);
            }
        });

        lblNewTrace5.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        lblNewTrace5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-add_user_male.png"))); // NOI18N
        lblNewTrace5.setText("Insert performer");
        lblNewTrace5.setToolTipText("Show selected trace in table");
        lblNewTrace5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblNewTrace5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblNewTrace5MousePressed(evt);
            }
        });

        lblAutoInsertTraces.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        lblAutoInsertTraces.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-robot_2.png"))); // NOI18N
        lblAutoInsertTraces.setText("Auto insert");
        lblAutoInsertTraces.setToolTipText("Auto generate traces");
        lblAutoInsertTraces.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAutoInsertTraces.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblAutoInsertTracesMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblShowInTable1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblInsertActToEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(lblNewTrace5, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblResetNewTrace)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRemoveEvent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIInsertTraceFromtblTraceTotblTraceList)
                .addGap(70, 70, 70)
                .addComponent(lblAutoInsertTraces)
                .addGap(18, 18, 18)
                .addComponent(lblRemoveSelectedTrace)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPredictESN)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblShowInTable1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblResetNewTrace, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRemoveEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPredictESN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIInsertTraceFromtblTraceTotblTraceList, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRemoveSelectedTrace, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInsertActToEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNewTrace5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAutoInsertTraces, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9))
        );

        jPanel2.setForeground(new java.awt.Color(255, 204, 204));

        tblActSet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Activity set"
            }
        ));
        jScrollPane1.setViewportView(tblActSet);

        tblPerSet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Performer set"
            }
        ));
        jScrollPane2.setViewportView(tblPerSet);

        tblNewTrace.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"START", "START", "START"}
            },
            new String [] {
                "Activity", "Performer", "Time"
            }
        ));
        jScrollPane3.setViewportView(tblNewTrace);

        tblInputTraceList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trace Info"
            }
        ));
        tblInputTraceList.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane4.setViewportView(tblInputTraceList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );

        javax.swing.GroupLayout RsAllocation_PrepareLayout = new javax.swing.GroupLayout(RsAllocation_Prepare);
        RsAllocation_Prepare.setLayout(RsAllocation_PrepareLayout);
        RsAllocation_PrepareLayout.setHorizontalGroup(
            RsAllocation_PrepareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(RsAllocation_PrepareLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        RsAllocation_PrepareLayout.setVerticalGroup(
            RsAllocation_PrepareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RsAllocation_PrepareLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CenterPanel.addTab("Resource allocation - Preparation", RsAllocation_Prepare);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 42, Short.MAX_VALUE)
        );

        rsAllocation_tblTraceInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trace Id", "Activities", "Performers", "Duration"
            }
        ));
        jScrollPane5.setViewportView(rsAllocation_tblTraceInfo);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1110, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout RsAllocation_AnalysisLayout = new javax.swing.GroupLayout(RsAllocation_Analysis);
        RsAllocation_Analysis.setLayout(RsAllocation_AnalysisLayout);
        RsAllocation_AnalysisLayout.setHorizontalGroup(
            RsAllocation_AnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RsAllocation_AnalysisLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        RsAllocation_AnalysisLayout.setVerticalGroup(
            RsAllocation_AnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(RsAllocation_AnalysisLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        CenterPanel.addTab("Resource allocation - Analysis", RsAllocation_Analysis);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CenterPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CenterPanel)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lblShowInTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblShowInTable1MousePressed
        // TODO add your handling code here:
        LoadActivitySetClick();
    }//GEN-LAST:event_lblShowInTable1MousePressed

    private void LoadActivitySetClick()
    {
        if(tblDetailSummary.getRowCount()==0)
        {
            MessageHelper.Warning("Nothing to load!");
            return;
        }
        
        if(!Variables.currentViewTable.equals("Activity"))
        {
//            MessageHelper.Warning("Please select some activities from activity table for the activity set");
            TableController.ViewTableInDetailPanel(DetailPanel2.cmbSelectTable.getItemAt(0));
            tblDetailSummary.setRowSelectionInterval(0, tblDetailSummary.getRowCount()-1);
        }
        
        RsAllocationHelper.LoadActivitySetFromTable(tblDetailSummary, tblActSet);
    }
    
    
    private void lblResetNewTraceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblResetNewTraceMousePressed
        // TODO add your handling code here:
        CenterPanelHelper.ResetNewTraceTable();
    }//GEN-LAST:event_lblResetNewTraceMousePressed

    private void lblRemoveEventMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRemoveEventMousePressed
        // TODO add your handling code here:
        CenterPanelHelper.RemoveSelectedEventInNewTraceTable();
    }//GEN-LAST:event_lblRemoveEventMousePressed

    private void lblPredictESNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPredictESNMousePressed
        if(tblInputTraceList.getRowCount()==0)
        {
            MessageHelper.Warning("Nothing to predict!");
            return;
        }
        
        FormTemplate.InputPredictESN frmInputPredictESN = new InputPredictESN();
        frmInputPredictESN.setVisible(true);
        
    }//GEN-LAST:event_lblPredictESNMousePressed

    private void lblIInsertTraceFromtblTraceTotblTraceListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblIInsertTraceFromtblTraceTotblTraceListMousePressed
        // TODO add your handling code here:
        RsAllocationHelper.InsertTraceToInputTraceTable(tblNewTrace, tblInputTraceList);
    }//GEN-LAST:event_lblIInsertTraceFromtblTraceTotblTraceListMousePressed

    private void lblRemoveSelectedTraceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRemoveSelectedTraceMousePressed
        // TODO add your handling code here:
        TableController.RemoveSelectedRows(tblInputTraceList);
    }//GEN-LAST:event_lblRemoveSelectedTraceMousePressed

    private void lblInsertActToEventMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInsertActToEventMousePressed
        // TODO add your handling code here:
        if(RsAllocationHelper.AddSelectedValueFromTableToTable(tblActSet, 0, tblNewTrace, 0))
            InsertValueToLastCellInColumn(tblNewTrace, 2, Variables.defaultTimeInsert);
        
        
    }//GEN-LAST:event_lblInsertActToEventMousePressed

    private void lblNewTrace5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNewTrace5MousePressed
        // TODO add your handling code here:
        RsAllocationHelper.AddSelectedValueFromTableToTable(tblPerSet, 0, tblNewTrace, 1);
    }//GEN-LAST:event_lblNewTrace5MousePressed

    private void lblAutoInsertTracesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAutoInsertTracesMousePressed
        // TODO add your handling code here:
        Integer rows = tblActSet.getRowCount();
        if (rows == 0)
        {
            MessageHelper.Warning("The activity set table is empty. Please load activity set table first!");
            return;
        }
        AutoInsertTrace frmAutoInsertTrace = new AutoInsertTrace();
        frmAutoInsertTrace.setVisible(true);
    }//GEN-LAST:event_lblAutoInsertTracesMousePressed

    private void lblViewActPerStatisticMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblViewActPerStatisticMousePressed
        try {
            //        JLabel _jlabel, String _type, Set<String> _memberSet, List<String> _logList, JTable _inputTable
            if(DetailPanel2.tblDetailSummary.getRowCount() == 0)
            {
                MessageHelper.Warning("Nothing to view...");
                return;
            }
            Set<String> memberSet = new HashSet<>();
            String type = DetailPanel2.cmbSelectTable.getSelectedItem().toString();
            if(DetailPanel2.tblDetailSummary.getSelectedRowCount() == 0)
                DetailPanel2.tblDetailSummary.setRowSelectionInterval(0, DetailPanel2.tblDetailSummary.getRowCount() - 1);
                
            int[] rows = DetailPanel2.tblDetailSummary.getSelectedRows();
            for(Integer row:rows)
                memberSet.add(DetailPanel2.tblDetailSummary.getValueAt(row, 0).toString());
            
            InformationHelper.GetActPerStatistic(lblViewActPerStatistic, type, memberSet, globalXESLogListStrings, tblTraceSummary);
        } catch (IOException ex) {
            Logger.getLogger(CenterPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(CenterPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CenterPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_lblViewActPerStatisticMousePressed

    private void lblViewTraceStatisticsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblViewTraceStatisticsMousePressed
        ShowTraceStatisticParameter frmParameter = new ShowTraceStatisticParameter();
        frmParameter.setVisible(true);
    }//GEN-LAST:event_lblViewTraceStatisticsMousePressed

    private void lblViewTraceDetailMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblViewTraceDetailMousePressed
        // TODO add your handling code here:
        if(true)
        {
            MessageHelper.Warning("Function is under construction...");
            return;
        }
        
        
        
        try {
            //       JLabel _jlabel, String _type, List<String> _logList, JTable _inputTable
            if(DetailPanel1.tblTraceSummary.getRowCount() == 0)
            {
                MessageHelper.Warning("Nothing to view... Please select some trace in trace information table!");
                return;
            }
            String type = "Activity_Performer";
//            JLabel _jlabel, String _type, List<String> _logList, JTable _inputTable
            InformationHelper.GetViewTraceDetail(lblViewTraceDetail, type, globalXESLogListStrings, tblTraceSummary);
        } catch (IOException ex) {
            Logger.getLogger(CenterPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(CenterPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CenterPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_lblViewTraceDetailMousePressed

    private void CenterPanelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CenterPanelStateChanged
        // TODO add your handling code here:
        if(CenterPanel.getSelectedIndex()==3) // Resource allowcation panel
        {
            LoadActivitySetClick();
        }

    }//GEN-LAST:event_CenterPanelStateChanged

    private void panelGraphvizResultMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelGraphvizResultMousePressed
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) 
        {
            System.out.println("double clicked");
            if(panelGraphvizResult.GetCurrentImagePath()==null)
                return;
            String sourceFilePath = panelGraphvizResult.GetCurrentImagePath();
            File sourceFile = new File(sourceFilePath);
            
            JFrame parentFrame = new JFrame();
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Specify a file to save");
            fileChooser.setFileFilter(new FileNameExtensionFilter("PNG","png"));

            fileChooser.setSelectedFile(new File(TimeHelper.GetNameByDateTime()));
            Integer userSelection = fileChooser.showSaveDialog(parentFrame);
            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();
                String destFilePath = fileToSave.getAbsolutePath();

                String fileType = fileChooser.getFileFilter().getDescription().toLowerCase();
                if(fileType.toUpperCase().equals("ALL FILES"))
                    fileType="png";

                File out = new File(destFilePath+"."+ fileType); 
                
                
                try {
                    FileUtils.copyFile(sourceFile, out);
                    
                    MessageHelper.Info("Exported to GraphViz format\n" + destFilePath+"."+ fileType);
                } catch (Exception e) {
                    MessageHelper.Error(e.toString());
                }
            }
            
            
            
        }
    }//GEN-LAST:event_panelGraphvizResultMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTabbedPane CenterPanel;
    public static javax.swing.JPanel RsAllocation_Analysis;
    private javax.swing.JPanel RsAllocation_Prepare;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    public static javax.swing.JLabel lblAutoInsertTraces;
    public static javax.swing.JLabel lblIInsertTraceFromtblTraceTotblTraceList;
    public static javax.swing.JLabel lblInsertActToEvent;
    public static javax.swing.JLabel lblNewTrace5;
    public static javax.swing.JLabel lblPredictESN;
    public static javax.swing.JLabel lblRemoveEvent;
    public static javax.swing.JLabel lblRemoveSelectedTrace;
    public static javax.swing.JLabel lblResetNewTrace;
    public static javax.swing.JLabel lblShowInTable1;
    public static javax.swing.JLabel lblViewActPerStatistic;
    public static javax.swing.JLabel lblViewTraceDetail;
    public static javax.swing.JLabel lblViewTraceStatistics;
    public static Helper.Common.PanelImage panelGraphvizResult;
    public static Helper.Common.PanelImage panelImageLeft;
    public static Helper.Common.PanelImage panelImageRight;
    public static javax.swing.JPanel panelLogAnalysis;
    public static javax.swing.JPanel panelLogVisualization;
    private javax.swing.JPanel panelStatistics;
    public static javax.swing.JTable rsAllocation_tblTraceInfo;
    public static javax.swing.JTable tblActSet;
    public static javax.swing.JTable tblInputTraceList;
    public static javax.swing.JTable tblNewTrace;
    public static javax.swing.JTable tblPerSet;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseWheelMoved(MouseWheelEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseDragged(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyTyped(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyReleased(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
